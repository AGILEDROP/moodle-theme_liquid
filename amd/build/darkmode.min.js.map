{"version":3,"file":"darkmode.min.js","sources":["../src/darkmode.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Darkmode functionality for theme Liquid.\n *\n * @module     theme_liquid/darkmode\n * @copyright  2025 Agiledrop ltd.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getUserPreference, setUserPreference} from 'core_user/repository';\n\nconst darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\nconst darkThemeToggle = document.querySelectorAll(\".darktheme-checkbox\");\n\nconst setTheme = (theme) => {\n    document.documentElement.setAttribute('data-bs-theme', theme);\n};\n\n/**\n * Retrieves the value of a cookie by name.\n * @param {string} name - The name of the cookie.\n * @returns {string|null} - The value of the cookie or null if not found.\n */\nconst getCookie = async (name) => {\n    let cookie = null;\n\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) {\n        cookie = parts.pop().split(';').shift();\n    }\n\n    const userPreference = await getUserPreference('theme_liquid-dark-mode');\n    if (userPreference !== null) {\n        cookie = userPreference === \"dark\" ? \"1\" : \"0\";\n    }\n\n    return cookie;\n};\n\n/**\n * Sets a cookie with the given name and value.\n * @param {string} name - The name of the cookie.\n * @param {string} value - The value to set for the cookie.\n */\nconst setCookie = (name, value) => {\n    document.cookie = `${name}=${value}; path=/; SameSite=None; Secure`;\n    setUserPreference('theme_liquid-dark-mode', value === \"0\" ? \"light\" : \"dark\");\n};\n\nconst handleCheckboxChange = (e) => {\n    const isDarkThemeEnabled = e.target.checked;\n\n    setTheme(isDarkThemeEnabled ? 'dark' : 'light');\n    setCookie(\"darkThemeEnabled\", isDarkThemeEnabled ? \"1\" : \"0\");\n    updateCheckboxes(isDarkThemeEnabled);\n};\n\nconst updateCheckboxes = (checked) => {\n    darkThemeToggle.forEach(function(checkbox) {\n        checkbox.checked = checked;\n    });\n};\n\nconst initializeTheme = async () => {\n    const storedDarkThemeSetting = await getCookie(\"darkThemeEnabled\");\n\n    if (storedDarkThemeSetting === null) {\n        setCookie(\"darkThemeEnabled\", darkThemeMq.matches ? \"1\" : \"0\");\n        updateCheckboxes(darkThemeMq.matches);\n        setTheme(darkThemeMq.matches ? 'dark' : 'light');\n    } else {\n        const isDarkTheme = storedDarkThemeSetting === \"1\";\n        updateCheckboxes(isDarkTheme);\n        setTheme(isDarkTheme ? 'dark' : 'light');\n    }\n};\n\nexport const init = () => {\n    darkThemeToggle.forEach(function(checkbox) {\n        checkbox.addEventListener(\"change\", handleCheckboxChange);\n    });\n\n    initializeTheme();\n};\n"],"names":["darkThemeMq","window","matchMedia","darkThemeToggle","document","querySelectorAll","setTheme","theme","documentElement","setAttribute","setCookie","name","value","cookie","handleCheckboxChange","e","isDarkThemeEnabled","target","checked","updateCheckboxes","forEach","checkbox","initializeTheme","async","storedDarkThemeSetting","parts","split","length","pop","shift","userPreference","getCookie","matches","isDarkTheme","addEventListener"],"mappings":";;;;;;;;MAyBMA,YAAcC,OAAOC,WAAW,gCAChCC,gBAAkBC,SAASC,iBAAiB,uBAE5CC,SAAYC,QACdH,SAASI,gBAAgBC,aAAa,gBAAiBF,QA8BrDG,UAAY,CAACC,KAAMC,SACrBR,SAASS,iBAAYF,iBAAQC,2EACX,yBAAoC,MAAVA,MAAgB,QAAU,SAGpEE,qBAAwBC,UACpBC,mBAAqBD,EAAEE,OAAOC,QAEpCZ,SAASU,mBAAqB,OAAS,SACvCN,UAAU,mBAAoBM,mBAAqB,IAAM,KACzDG,iBAAiBH,qBAGfG,iBAAoBD,UACtBf,gBAAgBiB,SAAQ,SAASC,UAC7BA,SAASH,QAAUA,YAIrBI,gBAAkBC,gBACdC,4BA1CQD,OAAAA,WACVV,OAAS,WAGPY,kBADarB,SAASS,QACRa,kBAAWf,WACV,IAAjBc,MAAME,SACNd,OAASY,MAAMG,MAAMF,MAAM,KAAKG,eAG9BC,qBAAuB,iCAAkB,iCACxB,OAAnBA,iBACAjB,OAA4B,SAAnBiB,eAA4B,IAAM,KAGxCjB,QA4B8BkB,CAAU,uBAEhB,OAA3BP,uBACAd,UAAU,mBAAoBV,YAAYgC,QAAU,IAAM,KAC1Db,iBAAiBnB,YAAYgC,SAC7B1B,SAASN,YAAYgC,QAAU,OAAS,aACrC,OACGC,YAAyC,MAA3BT,uBACpBL,iBAAiBc,aACjB3B,SAAS2B,YAAc,OAAS,yBAIpB,KAChB9B,gBAAgBiB,SAAQ,SAASC,UAC7BA,SAASa,iBAAiB,SAAUpB,yBAGxCQ"}