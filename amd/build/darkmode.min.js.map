{"version":3,"file":"darkmode.min.js","sources":["../src/darkmode.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Liquid.\n *\n * @copyright  2023 Agiledrop ltd.\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = () => {\n  const darkThemeMq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  if (darkThemeMq.matches && getCookie(\"darkThemeEnabled\") === null) {\n    setCookie(\"darkThemeEnabled\", \"1\");\n  }\n\n  const darkThemeToggle = document.getElementById(\"darktheme-checkbox\");\n  const storedDarkThemeSetting = getCookie(\"darkThemeEnabled\");\n\n  const setTheme = (theme) => {\n    document.documentElement.setAttribute('data-bs-theme', theme);\n  };\n\n  if (storedDarkThemeSetting === null) {\n    setCookie(\"darkThemeEnabled\", \"0\");\n    darkThemeToggle.checked = false;\n    setTheme('light');\n  } else {\n    darkThemeToggle.checked = storedDarkThemeSetting === \"1\";\n    setTheme(darkThemeToggle.checked ? 'dark' : 'light');\n  }\n\n  darkThemeToggle.addEventListener(\"change\", (e) => {\n    const isDarkThemeEnabled = e.target.checked;\n\n    setTheme(isDarkThemeEnabled ? 'dark' : 'light');\n    setCookie(\"darkThemeEnabled\", isDarkThemeEnabled ? \"1\" : \"0\");\n  });\n\n  /**\n   * Retrieves the value of a cookie by name.\n   * @param {string} name - The name of the cookie.\n   * @returns {string|null} - The value of the cookie or null if not found.\n   */\n  function getCookie(name) {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) {\n      return parts.pop().split(';').shift();\n    }\n    return null;\n  }\n\n  /**\n   * Sets a cookie with the given name and value.\n   * @param {string} name - The name of the cookie.\n   * @param {string} value - The value to set for the cookie.\n   */\n  function setCookie(name, value) {\n    document.cookie = `${name}=${value}; path=/`;\n  }\n};"],"names":["window","matchMedia","matches","getCookie","setCookie","darkThemeToggle","document","getElementById","storedDarkThemeSetting","setTheme","theme","documentElement","setAttribute","name","parts","cookie","split","length","pop","shift","value","checked","addEventListener","e","isDarkThemeEnabled","target"],"mappings":"0JAsBoB,KACEA,OAAOC,WAAW,gCAEtBC,SAA6C,OAAlCC,UAAU,qBACnCC,UAAU,mBAAoB,WAG1BC,gBAAkBC,SAASC,eAAe,sBAC1CC,uBAAyBL,UAAU,oBAEnCM,SAAYC,QAChBJ,SAASK,gBAAgBC,aAAa,gBAAiBF,iBAwBhDP,UAAUU,YAEXC,kBADaR,SAASS,QACRC,kBAAWH,kBACV,IAAjBC,MAAMG,OACDH,MAAMI,MAAMF,MAAM,KAAKG,QAEzB,cAQAf,UAAUS,KAAMO,OACvBd,SAASS,iBAAYF,iBAAQO,kBApCA,OAA3BZ,wBACFJ,UAAU,mBAAoB,KAC9BC,gBAAgBgB,SAAU,EAC1BZ,SAAS,WAETJ,gBAAgBgB,QAAqC,MAA3Bb,uBAC1BC,SAASJ,gBAAgBgB,QAAU,OAAS,UAG9ChB,gBAAgBiB,iBAAiB,UAAWC,UACpCC,mBAAqBD,EAAEE,OAAOJ,QAEpCZ,SAASe,mBAAqB,OAAS,SACvCpB,UAAU,mBAAoBoB,mBAAqB,IAAM"}